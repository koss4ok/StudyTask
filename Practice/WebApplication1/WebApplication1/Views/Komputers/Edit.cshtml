@model WebApplication1.Models.Komputers

@{
    ViewBag.Title = "Edit";
}

<div style="position: fixed;
  top: 0;
  left: 0;
  width: 13%;
  height: 100%;
  background-color:aqua;
  border-right:dashed;
  border-bottom-color:black;
  border-width:1px">
    <ul style="padding-top:20%; font-size:medium">
        <li>@Html.ActionLink("Домой", "Index", "Home")</li>
        <li>@Html.ActionLink("Компьютеры", "admin_index", "Komputers")</li>
        <li>@Html.ActionLink("Производители", "Index", "Makers")</li>
        <li>@Html.ActionLink("Заказы", "Index", "Deliveries")</li>
        <li>@Html.ActionLink("Продажи", "Index", "Orders")</li>
        <li>@Html.ActionLink("Комплектующие", "Index", "Details")</li>
    </ul>
</div>
<div style="position: fixed;
    top: 0;
    left: 13%;
    width: 100%;
    height: 100%;
    background-color:bisque">


    @using (Html.BeginForm(Html.BeginForm("Edit", "Komputers", null, FormMethod.Post, new { enctype = "multipart/form-data" })))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Komputers</h4>
        <hr />
            @{
                if (Model.image != null)
                {
                    byte[] photo = Model.image;
                    string imageSrc = null;
                    if (photo != null)
                    {
                        MemoryStream ms = new MemoryStream();
                        ms.Write(photo, 0, photo.Length);
                        string imageBase64 = Convert.ToBase64String(ms.ToArray());
                        imageSrc = string.Format("data:image/jpg;base64,{0}", imageBase64);
                        string base64String = Convert.ToBase64String(photo, 0, photo.Length);
                    }
                    <div>
                        <img src="@imageSrc" alt="Image" width="70" height="70" />
                    </div>
                }
            }
            <div class="col-md-10">
                Выбрать новую фотографию: <input type="file" name="upload" />
            </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Processor, "Processor", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Processor", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Processor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Motherboard, "Motherboard", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Motherboard", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Motherboard, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ram, "Ram", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Ram", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Ram, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Hard_drive, "Hard_drive", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Hard_drive", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Hard_drive, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Delivery, "Delivery", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Delivery", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Order, "Order", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Order", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "admin_index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>